{"version":3,"sources":["components/PhotoCard.module.css","components/Pagination.module.css","components/Gallery.module.css","components/SearchBar.module.css","components/PhotoCard.js","components/Pagination.js","components/Gallery.js","api/api.js","reducers/reducer.js","store/index.js","components/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","photoCard","picture","button","photoGallery","searchBox","connect","state","photos","gallery","photo","showGallery","visibleCards","dispatch","handleVisibleCard","index","type","props","_props$photo","title","farm","id","server","secret","show","includes","src","concat","react_default","a","createElement","Fragment","className","style","visibility","build","threshold","onLoad","media","srcSet","alt","searchInput","handleNewSearch","handleNextPage","nextPage","value","onClick","map","components_PhotoCard","key","components_Pagination","length","api","axios","method","url","process","then","response","data","initialState","showPages","search","newSearch","reducers","combineReducers","arguments","undefined","action","console","log","Object","objectSpread","toConsumableArray","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","handleInputChange","e","target","Api","ref","useRef","useEffect","current","focus","lib","inputRef","debounceTimeout","name","onChange","placeholder","autoComplete","App","components_SearchBar","components_Gallery","Component","Boolean","location","hostname","match","dotenv","config","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa53c991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoCard\":\"PhotoCard_photoCard__1mobB\",\"picture\":\"PhotoCard_picture__85hCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Pagination_button__HFkvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoGallery\":\"Gallery_photoGallery__3ZEpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"SearchBar_searchBox__29Cry\"};","import React from \"react\";\r\nimport { photoCard, picture } from \"./PhotoCard.module.css\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PhotoCard = props => {\r\n  const { title, farm, id, server, secret } = props.photo;\r\n  const show = props.visibleCards.includes(props.index);\r\n  const src = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}`;\r\n  return (\r\n    <>\r\n      {props.photo && (\r\n        <div\r\n          className={photoCard}\r\n          style={{\r\n            visibility: `${show && \"visible\"}`\r\n          }}\r\n        >\r\n          <LazyLoadComponent threshold={300}>\r\n              <picture\r\n                className={picture}\r\n                onLoad={() => props.handleVisibleCard(props.index)}\r\n              >\r\n                <source media='(min-width: 1200px)' srcSet={`${src}_b.jpg`} />\r\n                <source media='(min-width: 450px)' srcSet={`${src}_z.jpg`} />\r\n                <img src={`${src}_n.jpg`} alt='flickr-pic' />\r\n                <div>\r\n                  <p>{title}</p>\r\n                </div>\r\n              </picture>\r\n          </LazyLoadComponent>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  photos: state.gallery.photos.photo,\r\n  showGallery: state.gallery.showGallery,\r\n  visibleCards: state.photoCard.visibleCards\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleVisibleCard: index => dispatch({ type: \"VISIBLE\", index: index })\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PhotoCard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { button } from \"./Pagination.module.css\";\r\n\r\nconst Pagination = props => {\r\n  return (\r\n    <>\r\n      {props.nextPage ? (\r\n        <button className={button}>Next Page</button>\r\n      ) : (\r\n        <button\r\n          className={button}\r\n          value={props.searchInput}\r\n          onClick={props.handleNewSearch}\r\n        >\r\n          New Search\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ searchInput: state.searchInput });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleNewSearch: () => {\r\n      dispatch({ type: \"FOCUSSEARCH\" });\r\n    },\r\n    handleNextPage: () => {\r\n      dispatch({ type: \"NEXTPAGE\" });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pagination);\r\n","import React from \"react\";\r\nimport PhotoCard from \"./PhotoCard\";\r\nimport Pagination from \"./Pagination\";\r\nimport { photoGallery } from \"./Gallery.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Gallery = props => {\r\n  const { photos, showGallery } = props;\r\n  return (\r\n    <div className={photoGallery}>\r\n      {photos && showGallery && (\r\n        <>\r\n          {photos.map((photo, index) => (\r\n            <PhotoCard\r\n              index={index}\r\n              photo={photo}\r\n              key={`card-photo-${index}`}\r\n            />\r\n          ))}\r\n          <Pagination nextPage={photos.length > 98 ? true : false} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  photos: state.gallery.photos.photo,\r\n  showGallery: state.gallery.showGallery\r\n});\r\n\r\nexport default connect(mapStateToProps)(Gallery);\r\n","import axios from \"axios\";\r\n\r\n//Thunk\r\nconst loadPhotos = searchInput => {\r\n  return dispatch => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `${process.env.REACT_APP_API_URL}?method=${\r\n        searchInput\r\n          ? process.env.REACT_APP_API_METHOD_SEARCH\r\n          : process.env.REACT_APP_API_METHOD_RECENT\r\n      }&api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&tags=${searchInput}&sort=relevance&safe_search=1&format=json&nojsoncallback=1`\r\n    }).then(response => {\r\n      dispatch({ type: \"PHOTOS\", photos: response.data.photos });\r\n    });\r\n  };\r\n};\r\n\r\nexport default { loadPhotos };\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst initialState = {\r\n  gallery: {\r\n    photos: [],\r\n    showGallery: true,\r\n    showPages: 1\r\n  },\r\n  search: {\r\n    newSearch: 1,\r\n    searchInput: \"\"\r\n  },\r\n  photoCard: {\r\n    visibleCards: []\r\n  }\r\n};\r\n\r\nconst searchReducer = (state = initialState.search, action) => {\r\n  console.log(\"searchReducer\", action);\r\n  switch (action.type) {\r\n    case \"SEARCH\":\r\n      return {\r\n        ...state,\r\n        searchInput: action.value\r\n      };\r\n    case \"FOCUSSEARCH\":\r\n      return { ...state, newSearch: state.newSearch + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst galleryReducer = (state = initialState.gallery, action) => {\r\n  console.log(\"galleryReducer\", action);\r\n  switch (action.type) {\r\n    case \"SEARCH\":\r\n      return {\r\n        ...state,\r\n        showGallery: false\r\n      };\r\n    case \"PHOTOS\":\r\n      return { ...state, photos: action.photos, showGallery: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst photoCardReducer = (state = initialState.photoCard, action) => {\r\n  console.log(\"photoCardReducer\", action);\r\n  switch (action.type) {\r\n    case \"VISIBLE\":\r\n      return state.visibleCards.includes(action.index)\r\n        ? state\r\n        : {\r\n            ...state,\r\n            visibleCards: [...state.visibleCards, action.index]\r\n          };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  gallery: galleryReducer,\r\n  search: searchReducer,\r\n  photoCard: photoCardReducer\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from '../reducers/reducer'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nimport { searchBox } from \"./SearchBar.module.css\";\r\nimport Api from \"../api/api\";\r\nimport store from \"../store/index\";\r\n\r\nconst SearchBar = props => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    props.newSearch && ref.current.focus();\r\n  }, [props.newSearch]);\r\n  return (\r\n    <DebounceInput\r\n      inputRef={ref}\r\n      debounceTimeout={500}\r\n      className={searchBox}\r\n      name='searchInput'\r\n      onChange={props.handleInputChange}\r\n      placeholder={\"Search me...\"}\r\n      autoComplete={\"off\"}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchInput: state.search.searchInput,\r\n  newSearch: state.search.newSearch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleInputChange: e => {\r\n      dispatch({ type: \"SEARCH\", value: e.target.value });\r\n      store.dispatch(Api.loadPhotos(e.target.value));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchBar);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport SearchBar from \"./components/SearchBar\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <div>\r\n            <SearchBar />\r\n            <h1>Flickr search</h1>\r\n          </div>\r\n        </header>\r\n        <Gallery />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport dotenv from 'dotenv';\r\nimport store from './store'\r\ndotenv.config()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}