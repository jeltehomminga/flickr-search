{"version":3,"sources":["components/PhotoCard.module.css","components/Gallery.module.css","actions/actions.js","components/PhotoCard.js","reducers/search.js","reducers/gallery.js","reducers/photocard.js","reducers/index.js","store/index.js","api/api.js","components/Pagination.js","components/Gallery.js","components/SearchBar.js","App.js","serviceWorker.js","index.js","components/Pagination.module.css","components/SearchBar.module.css"],"names":["module","exports","photoCard","picture","photoGallery","actionCreator","search","e","type","value","target","visible","i","index","focus","navigate","photos","response","page","connect","_ref","gallery","photo","showGallery","visibleCards","dispatch","handleVisibleCard","props","_props$photo","title","farm","id","server","secret","show","includes","src","concat","react_default","a","createElement","Fragment","className","style","visibility","build","threshold","onLoad","media","srcSet","alt","initialSearchState","newSearch","scrollToGallery","searchInput","searchReducer","state","arguments","length","undefined","action","Object","objectSpread","initialGalleryState","showPage","galleryReducer","initialPhotoCardState","photoCardReducer","toConsumableArray","reducers","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","process","REACT_APP_API_METHOD_SEARCH","recent","REACT_APP_API_METHOD_RECENT","key","REACT_APP_API_KEY","url","REACT_APP_API_URL","api","axios","get","params","method","api_key","tags","sort","safe_search","format","nojsoncallback","then","data","catch","err","console","log","_ref2","currentPage","Number","handleNewSearch","navigatePage","pageNumber","Api","nextPage","button","onClick","myRef","useRef","useEffect","setTimeout","scrollTo","current","offsetTop","ref","map","components_PhotoCard","components_Pagination","handleInputChange","AppHeader","SearchContainer","lib","inputRef","debounceTimeout","searchBox","name","onChange","placeholder","autoComplete","App","components_SearchBar","components_Gallery","Boolean","location","hostname","match","dotenv","config","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35084ac9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoCard\":\"PhotoCard_photoCard__1mobB\",\"picture\":\"PhotoCard_picture__85hCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoGallery\":\"Gallery_photoGallery__3ZEpo\"};","const SEARCH = \"SEARCH\";\r\nconst PHOTOS = \"PHOTOS\";\r\nconst VISIBLE = \"VISIBLE\";\r\nconst FOCUSSEARCH = \"FOCUSSEARCH\";\r\nconst NAVIGATE = \"NAVIGATE\";\r\n\r\nconst actionCreator = {\r\n  search: e => ({ type: SEARCH, value: e.target.value }),\r\n  visible: i => ({ type: VISIBLE, index: i }),\r\n  focus: () => ({ type: FOCUSSEARCH }),\r\n  navigate: () => ({ type: NAVIGATE }),\r\n  photos: (response, page) => ({\r\n    type: PHOTOS,\r\n    photos: response,\r\n    page: page\r\n  })\r\n};\r\n\r\nexport default actionCreator;\r\n","import React from \"react\";\r\nimport { photoCard, picture } from \"./PhotoCard.module.css\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\nimport { connect } from \"react-redux\";\r\nimport actionCreator  from '../actions/actions'\r\n\r\n\r\nconst PhotoCard = props => {\r\n  const { title, farm, id, server, secret } = props.photo;\r\n  //Check if card can be made visible after image loaded\r\n  const show = props.visibleCards.includes(props.index);\r\n  const src = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}`;\r\n  //LazyLoadCOmponent to only load needed components \r\n  return (\r\n    <>\r\n      {props.photo && (\r\n        <div\r\n          className={photoCard}\r\n          style={{\r\n            visibility: `${show && \"visible\"}`\r\n          }}\r\n        >\r\n          <LazyLoadComponent threshold={300}>\r\n              <picture\r\n                className={picture}\r\n                onLoad={() => props.handleVisibleCard(props.index)}\r\n              >\r\n                <source media='(min-width: 1200px)' srcSet={`${src}_b.jpg`} />\r\n                <source media='(min-width: 450px)' srcSet={`${src}_z.jpg`} />\r\n                <img src={`${src}_n.jpg`} alt='flickr-pic' />\r\n                <div>\r\n                  <p>{title}</p>\r\n                </div>\r\n              </picture>\r\n          </LazyLoadComponent>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ gallery, photoCard }) => ({\r\n  photos: gallery.photos.photo,\r\n  showGallery: gallery.showGallery,\r\n  visibleCards: photoCard.visibleCards\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  //Dispatch action to determine which cards can be made visible after image has loaded\r\n  handleVisibleCard: index => dispatch(actionCreator.visible(index))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PhotoCard);\r\n","const initialSearchState = {\r\n  newSearch: 1,\r\n  scrollToGallery: 0,\r\n  searchInput: \"\"\r\n};\r\n\r\nconst searchReducer = (state = initialSearchState, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH\":\r\n      return {\r\n        ...state,\r\n        searchInput: action.value\r\n      };\r\n    case \"FOCUSSEARCH\":\r\n      return { ...state, newSearch: state.newSearch + 1 };\r\n    case \"PHOTOS\":\r\n      return { ...state, scrollToGallery: state.scrollToGallery + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","const initialGalleryState = {\r\n    photos: [],\r\n    showGallery: false,\r\n    showPage: 1\r\n  };\r\n\r\n  const galleryReducer = (state = initialGalleryState, action) => {\r\n    switch (action.type) {\r\n      case \"SEARCH\":\r\n        return {\r\n          ...state,\r\n          showGallery: false\r\n        };\r\n      case \"NAVIGATE\":\r\n        return {\r\n          ...state,\r\n          showGallery: false\r\n        };\r\n      case \"PHOTOS\":\r\n        return {\r\n          ...state,\r\n          photos: action.photos,\r\n          showGallery: true,\r\n          showPage: action.page\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default galleryReducer;\r\n","const initialPhotoCardState = { visibleCards: [] };\r\n\r\nconst photoCardReducer = (state = initialPhotoCardState, action) => {\r\n  switch (action.type) {\r\n    case \"VISIBLE\":\r\n      return state.visibleCards.includes(action.index)\r\n        ? state\r\n        : {\r\n            ...state,\r\n            visibleCards: [...state.visibleCards, action.index]\r\n          };\r\n    case \"SEARCH\":\r\n      return { visibleCards: [] };\r\n      case \"NAVIGATE\":\r\n      return { visibleCards: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default photoCardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport searchReducer from './search';\r\nimport galleryReducer from './gallery';\r\nimport photoCardReducer from './photocard';\r\n\r\nconst reducers = combineReducers({\r\n  gallery: galleryReducer,\r\n  search: searchReducer,\r\n  photoCard: photoCardReducer\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from '../reducers'\r\n\r\n//Compose to still be ablt to use Redux Devtools en Thunk\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport actionCreator from \"../actions/actions\";\r\n\r\nconst {\r\n  REACT_APP_API_METHOD_SEARCH: search,\r\n  REACT_APP_API_METHOD_RECENT: recent,\r\n  REACT_APP_API_KEY: key,\r\n  REACT_APP_API_URL: url\r\n} = process.env;\r\n\r\nconst loadPhotos = (searchInput, page) => {\r\n  //Thunk function returns a function\r\n  return dispatch => {\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          method: searchInput ? search : recent,\r\n          api_key: key,\r\n          tags: searchInput,\r\n          page: page,\r\n          sort: \"relevance\",\r\n          safe_search: \"1\",\r\n          format: \"json\",\r\n          nojsoncallback: 1\r\n        }\r\n      })\r\n      .then(response => {\r\n        dispatch(actionCreator.photos(response.data.photos, page));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n};\r\n\r\nexport default { loadPhotos };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { button } from \"./Pagination.module.css\";\r\nimport store from \"../store/index\";\r\nimport Api from \"../api/api\";\r\nimport actionCreator  from '../actions/actions'\r\n\r\nconst Pagination = ({\r\n  searchInput,\r\n  nextPage,\r\n  currentPage,\r\n  handleNewSearch,\r\n  navigatePage,\r\n  showGallery\r\n}) => {\r\n  return (\r\n    <>\r\n      {currentPage > 1 && (\r\n        <button\r\n          className={button}\r\n          value={searchInput}\r\n          onClick={() => navigatePage(currentPage - 1)}\r\n        >\r\n          Previous Page\r\n        </button>\r\n      )}\r\n      {showGallery && (\r\n        <button\r\n          className={button}\r\n          value={searchInput}\r\n          onClick={handleNewSearch}\r\n        >\r\n          New Search\r\n        </button>\r\n      )}\r\n      {nextPage && (\r\n        <button\r\n          className={button}\r\n          value={searchInput}\r\n          onClick={() => navigatePage(currentPage + 1)}\r\n        >\r\n          Next Page\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ search, gallery }) => ({\r\n  searchInput: search.searchInput,\r\n  //Convert page number to type number to increment/decrement page\r\n  currentPage: Number(gallery.photos.page),\r\n  showGallery: gallery.showGallery\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //Focus back in the searchbox with new search\r\n    handleNewSearch: () => {\r\n      dispatch(actionCreator.focus());\r\n    },\r\n    navigatePage: pageNumber => {\r\n      dispatch(actionCreator.navigate());\r\n      store.dispatch(Api.loadPhotos(null, pageNumber + \"\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pagination);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport PhotoCard from \"./PhotoCard\";\r\nimport Pagination from \"./Pagination\";\r\nimport { photoGallery } from \"./Gallery.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Gallery = ({ photos, showGallery }) => {\r\n  const myRef = useRef();\r\n  //Scroll to top of Gallery after photos returned\r\n  useEffect(() => {\r\n    showGallery && \r\n    setTimeout(() => {\r\n      window.scrollTo(0, myRef.current.offsetTop)\r\n    }, 1000  ) ;\r\n  }, [showGallery]);\r\n  return (\r\n    <div ref={myRef} className={photoGallery}>\r\n      {photos && showGallery && (\r\n        <>\r\n          {photos.map((photo, index) => (\r\n            <PhotoCard\r\n              index={index}\r\n              photo={photo}\r\n              key={`card-photo-${index}`}\r\n            />\r\n          ))}\r\n          <Pagination nextPage={photos.length > 98 ? true : false} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  photos: state.gallery.photos.photo,\r\n  showGallery: state.gallery.showGallery\r\n});\r\n\r\nexport default connect(mapStateToProps)(Gallery);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nimport { AppHeader, searchBox, SearchContainer  } from \"./SearchBar.module.css\";\r\nimport Api from \"../api/api\";\r\nimport store from \"../store/index\";\r\nimport actionCreator  from '../actions/actions'\r\n\r\nconst SearchBar = ({newSearch, handleInputChange, })=> {\r\n  const ref = useRef();\r\n  //Focus in SearchBox on initial load and new search\r\n  useEffect(() => {\r\n    newSearch && ref.current.focus();\r\n  }, [newSearch]);\r\n  //Debounce component to only search after typing finished\r\n  return (\r\n    <header className={AppHeader}>\r\n      <div className={SearchContainer}>\r\n        <DebounceInput\r\n          inputRef={ref}\r\n          debounceTimeout={500}\r\n          className={searchBox}\r\n          name='searchInput'\r\n          onChange={handleInputChange}\r\n          placeholder={\"Search me...\"}\r\n          autoComplete={\"off\"}\r\n        />\r\n        <h1>Flickr search</h1>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ search })=> ({\r\n  searchInput: search.searchInput,\r\n  newSearch: search.newSearch\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleInputChange: e => {\r\n      dispatch(actionCreator.search(e));\r\n      //Thunk-Redux use for asynch call to API\r\n      store.dispatch(Api.loadPhotos(e.target.value));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchBar);\r\n","import React from \"react\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport SearchBar from \"./components/SearchBar\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n      <SearchBar />\r\n      <Gallery />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport dotenv from 'dotenv';\r\nimport store from './store'\r\ndotenv.config()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Pagination_button__HFkvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppHeader\":\"SearchBar_AppHeader__2JJ63\",\"SearchContainer\":\"SearchBar_SearchContainer__1aG7S\",\"searchBox\":\"SearchBar_searchBox__29Cry\"};"],"sourceRoot":""}